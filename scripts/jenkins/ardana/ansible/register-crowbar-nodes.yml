---

- name: Create temp inventory with all cloud nodes
  hosts: "{{ ardana_env }}"
  remote_user: root
  gather_facts: False
  vars:
    task: "deploy"
    virtual_hosts:
      - group: controller
        ips: "{{ hostvars['localhost'].controller_conf_ips | difference([hostvars['localhost'].admin_conf_ip]) }}"
      - group: compute
        ips: "{{ hostvars['localhost'].compute_conf_ips }}"

  tasks:
    - name: Create temp inventory with all non-admin virtual nodes
      add_host:
        name: "{{ item.0.group }}{{ (item.0.ips | length > 1) | ternary(item.0.ips.index(item.1) + 1, '') }}"
        ansible_host: "{{ item.1 }}"
        ansible_password: "linux"
        group: "{{ item.0.group }}, cloud_virt_hosts"
        cloud_node_role: "{{ item.0.group }}"
      loop: "{{ virtual_hosts | subelements('ips') }}"
      loop_control:
        label: "{{ item.0.group }}{{ item.0.ips.index(item.1) + 1 }} - {{ item.1 }}"

- name: Register crowbar cloud nodes
  hosts: cloud_virt_hosts
  remote_user: root
  gather_facts: True
  vars:
    task: "register"
    ansible_ssh_common_args: >
      -o ProxyCommand='ssh -o UserKnownHostsFile=/dev/null -o
      StrictHostKeyChecking=no -W %h:%p -q root@{{ hostvars[ardana_env].ansible_host }}'
      -o ControlPath='~/.ansible/cp/{{ ardana_env }}-%r@%h:%p'

  tasks:
    - block:
        - include_role:
            name: crowbar_register

      rescue:
        - include_role:
            name: rocketchat_notify
          delegate_to: "{{ ardana_env }}"
          vars:
            rc_action: "finished"
            rc_state: "Failed"
          when: rc_notify

        - name: Stop if something failed
          fail:
            msg: "{{ task }} failed."
