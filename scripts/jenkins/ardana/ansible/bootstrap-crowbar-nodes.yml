#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Bootstrap virtual deployer for crowbar
  hosts: "{{ ardana_env }}"
  remote_user: root
  gather_facts: False
  vars:
    task: "deploy"
    virtual_hosts:
      - group: controller
        ips: "{{ hostvars['localhost'].controller_conf_ips | difference([hostvars['localhost'].admin_conf_ip]) }}"
      - group: compute
        ips: "{{ hostvars['localhost'].compute_conf_ips }}"

  tasks:
    - block:
        - name: Create temp inventory with all virtual nodes (minus admin)
          add_host:
            name: "{{ item.0.group }}{{ item.0.ips.index(item.1) + 1 }}"
            ansible_host: "{{ item.1 }}"
            ansible_password: "linux"
            group: "{{ item.0.group }}, crowbar_virt_hosts"
          loop: "{{ virtual_hosts | subelements('ips') }}"
          loop_control:
            label: "{{ item.0.group }}{{ item.0.ips.index(item.1) + 1 }} - {{ item.1 }}"

      rescue:
        - include_role:
            name: rocketchat_notify
          vars:
            rc_action: "finished"
            rc_state: "Failed"
          when: rc_notify

        - name: Stop if something failed
          fail:
            msg: "{{ task }} failed."

- name: Bootstrap other virtual nodes for crowbar
  hosts: crowbar_virt_hosts
  remote_user: root
  # NOTE: don't gather facts before nodes become accessible
  gather_facts: false
  vars:
    task: "deploy"
    ansible_ssh_common_args: >
      -o ProxyCommand='ssh -o UserKnownHostsFile=/dev/null -o
      StrictHostKeyChecking=no -W %h:%p -q root@{{ hostvars[ardana_env].ansible_host }}'
      -o ControlPath='~/.ansible/cp/{{ ardana_env }}-%r@%h:%p'

  tasks:
    - block:
        - name: Wait for cloud nodes to be accessible
          wait_for_connection:
            sleep: 10
            timeout: 300
          register: _connection

        - name: Fail if one or more hosts are unreacheable
          fail:
          when: hostvars[item]['_connection']['failed']
          loop: "{{ ansible_play_hosts_all }}"
          run_once: True

        - name: Gather facts
          setup:

        - name: Disable DHCP on the cloud infra management network
          command: |
            openstack --os-cloud {{ os_cloud }} subnet set \
              --no-dhcp \
              openstack-ardana-{{ ardana_env }}_management_subnet
          delegate_to: localhost
          run_once: True

        - include_role:
            name: setup_root_partition

        # FIXME: remove everything but eth0 ifcfg files from base image
        - name: Remove unused ifcfg files
          shell: rm /etc/sysconfig/network/ifcfg-eth[1-9]*

      rescue:
        - include_role:
            name: rocketchat_notify
          delegate_to: "{{ ardana_env }}"
          vars:
            rc_action: "finished"
            rc_state: "Failed"
          when: rc_notify

        - name: Stop if something failed
          fail:
            msg: "{{ task }} failed."
