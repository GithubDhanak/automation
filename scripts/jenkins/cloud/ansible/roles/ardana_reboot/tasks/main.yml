#
# (c) Copyright 2020 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: Get deployer node
  command: |
    ansible 'OPS-LM--first-member' --list-hosts
  args:
    chdir: "{{ ardana_scratch_path }}"
  register: ardana_deployer_result
  changed_when: False

- name: Get list of non-deployer non-compute i.e. controller nodes
  command: |
    ansible 'resources:!OPS-LM--first-member:!NOV-CMP' --list-hosts
  args:
    chdir: "{{ ardana_scratch_path }}"
  register: ardana_controllers_result
  changed_when: False

- name: Get list of non-deployer compute nodes
  command: |
    ansible 'resources:!OPS-LM--first-member:&NOV-CMP' --list-hosts
  args:
    chdir: "{{ ardana_scratch_path }}"
  register: ardana_computes_result
  changed_when: False

- name: Set node variables
  set_fact:
    ardana_deployer: "{{ ardana_deployer_result.stdout | trim }}"
    ardana_controllers: "{{ ardana_controllers_result.stdout_lines | map('trim') | list }}"
    ardana_computes: "{{ ardana_computes_result.stdout_lines | map('trim') | list }}"

- debug:
    var: "{{ item }}"
    verbosity: 1
  with_items:
    - ardana_deployer
    - ardana_controllers
    - ardana_computes

- include_tasks: reboot_nodes.yml

- name: Run playbooks from "{{ ardana_scratch_path }}"
  command: "ansible-playbook {{ item.play }}"
  args:
    chdir: "{{ ardana_scratch_path }}"
  loop: "{{ ardana_scratch_playbooks }}"
  register: ansible_scratch_plays
  when:
    - item.when | default(True)
    - not (ansible_scratch_plays | default({})) is failed
  loop_control:
    label: "{{ item.play }}"
